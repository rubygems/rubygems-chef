upstream app_servers {
  least_conn;
  <% @app_servers.each do |app_node| %>
  server <%= app_node['ipaddress'] %>:9000 fail_timeout=0;
  <% end %>
}

resolver 172.30.0.2;

limit_req_status 429;
limit_req_zone  $binary_remote_addr  zone=abusers:10m  rate=10r/s;
limit_req_zone  $binary_remote_addr  zone=dependencyapi:10m  rate=15r/s;

map $http_x_forwarded_proto $scheme_from_fastly {
  "" $scheme;
  default $http_x_forwarded_proto;
}

# HTTP
server {
  listen 80 default;

  server_name <%= @server_names.join(' ') %>;

  <% @fastly_ip_ranges.each do |ip| %>
  set_real_ip_from <%= ip %>;
  <% end %>
  real_ip_header Fastly-Client-IP;

  <% if @force_ssl %>
    # redirect all requests to SSL
    rewrite ^(.*) https://$host$1 permanent;
  <% else %>

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;

    location /nginx_status {
      stub_status on;
      allow 127.0.0.1;
      deny all;
      access_log off;
    }

    include <%= node['nginx']['dir'] %>/filters.conf; # managed by chef
    include <%= node['nginx']['dir'] %>/blacklist.conf; # not managed by chef

    location ~ /rubygems/rubygems(.*)\.(tgz|zip|gem)$ {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location ~ /gems/(.*)\.gem$ {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location ~ /downloads/(.*)\.gem {
      set $gem $1;
      rewrite ^ <%= @gem_mirror %>/gems/$gem.gem redirect;
    }

    location /api/v1/dependencies {
      limit_req zone=dependencyapi burst=10 nodelay;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_pass http://app_servers;
    }

    location /quick/Marshal.4.8/ {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /specs.4.8.gz {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /latest_specs.4.8.gz {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /prerelease_specs.4.8.gz {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    # Crufty old redirects

    location = /specs.4.8 {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /latest_specs.4.8 {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /prerelease_specs.4.8 {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /quick/rubygems-update-1.3.6.gemspec.rz {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /yaml.Z {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /yaml.z {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /yaml {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /Marshal.4.8.Z {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /Marshal.4.8 {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /quick/index.rz {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /quick/index {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /quick/latest_index.rz {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location = /quick/latest_index {
      rewrite ^ <%= @gem_mirror %>$request_uri redirect;
    }

    location / {
      root /var/www/rubygems;
      try_files /maintenance.html @app;
    }

    location @app {
      limit_req zone=abusers burst=10;
      proxy_pass http://app_servers;
    }

  <% end %>
}

# Old hosts that point to rubygems.org

server {
  listen 80;

  server_name gemcutter.org gems.rubyforge.org;

  rewrite ^(.*) https://rubygems.org$1 permanent;
}

# HTTPS
server {

  listen 443 default ssl;

  server_name <%= @server_names.join(" ") %>;

  <% @fastly_ip_ranges.each do |ip| %>
  set_real_ip_from <%= ip %>;
  <% end %>
  real_ip_header Fastly-Client-IP;

  # SSL settings
  ssl                         on;
  ssl_certificate             <%= @ssl_cert %>;
  ssl_certificate_key         <%= @ssl_key %>;
  ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers   on;
  ssl_dhparam                 <%= node['nginx']['dir'] %>/certs/dhparam.pem;

  # There are bugs in Net::HTTP::Persisent + OpenSSL in 1.8 are uncovered by
  # trying to use a session cache. If we switch it off, they go away.
  ssl_session_cache           off;
  keepalive_timeout           65;

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme_from_fastly;
  proxy_set_header Content-Length $content_length;
  proxy_set_header Host $host;
  proxy_redirect off;

  client_max_body_size 500M;

  include <%= node['nginx']['dir'] %>/filters.conf; # managed by chef
  include <%= node['nginx']['dir'] %>/blacklist.conf; # not managed by chef

  location ~ /rubygems/rubygems(.*)\.(tgz|zip|gem)$ {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location ~ /gems/(.*)\.gem$ {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location ~ /downloads/(.*)\.gem {
    set $gem $1;
    rewrite ^ <%= @gem_mirror_ssl %>/gems/$gem.gem redirect;
  }

  location /api/v1/dependencies {
    limit_req zone=dependencyapi burst=10 nodelay;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://app_servers;
  }

  ##### BEGIN legacy redirects to CDN

  location /quick/Marshal.4.8/ {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /specs.4.8.gz {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /latest_specs.4.8.gz {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /prerelease_specs.4.8.gz {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /specs.4.8 {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /latest_specs.4.8 {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /prerelease_specs.4.8 {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /quick/rubygems-update-1.3.6.gemspec.rz {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /yaml.Z {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /yaml.z {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /yaml {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /Marshal.4.8.Z {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /Marshal.4.8 {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /quick/index.rz {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /quick/index {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /quick/latest_index.rz {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  location = /quick/latest_index {
    rewrite ^ <%= @gem_mirror_ssl %>$request_uri redirect;
  }

  ##### END legacy redirects to CDN

  location / {
    root /var/www/rubygems;
    try_files /maintenance.html @app;
  }

  location @app {
    limit_req zone=abusers burst=10;
    proxy_pass http://app_servers;
  }

}
